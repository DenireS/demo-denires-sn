{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogChat.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogChat.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","src","img","dialog__name","onClick","setCurrentChat","id","to","activeClassName","activeLink","name","Dialogs","dialogsElements","users","map","d","userName","key","photo","dialogs","dialogs__item","mapStateToPropsForRedirect","state","isAuth","auth","Message","message","Textarea","FormType","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","DialogChat","messagesElements","messages","m","body","chat","values","sendMessage","currentChat","newMessageBody","DialogsContainer","this","userId","match","params","requestMessages","history","push","requestDialogs","refreshDialogs","prevProps","prevState","snapshot","isFetching","Preloader","React","PureComponent","compose","connect","dialogsPage","startChatting","Component","RedirectComponent","withRouter"],"mappings":"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","file":"static/js/3.9b6a86f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1PoEC\",\"dialogs__item\":\"Dialogs_dialogs__item__3XPTy\",\"dialog\":\"Dialogs_dialog__31Tr1\",\"dialog__name\":\"Dialogs_dialog__name__kHnAw\",\"activeLink\":\"Dialogs_activeLink__3nhdI\",\"messages\":\"Dialogs_messages__2vLQu\",\"message\":\"Dialogs_message__AuSIq\",\"post\":\"Dialogs_post__1tN8A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"DialogChat_chat__3jMcw\",\"messages\":\"DialogChat_messages__3TRMy\",\"message\":\"DialogChat_message__3xB4P\",\"show\":\"DialogChat_show__2av9d\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nfunction DialogItem(props) {\r\n    let selectDialog = () => {\r\n        props.setCurrentChat(props.id)\r\n        // props.startChatting(props.id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.img}></img>\r\n            <div className={s.dialog__name} onClick={selectDialog}>\r\n                <NavLink to={'/dialogs/' + props.id} activeClassName={s.activeLink}>\r\n                    {props.name}\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\n\r\nlet Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.users.map((d) => (\r\n        <DialogItem name={d.userName} key={d.id} id={d.id} img={d.photo} {...props}/>\r\n    ));\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs__item}>{dialogsElements}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from 'react';\r\nimport s from '../DialogChat.module.css';\r\n\r\nfunction Message(props) {\r\n  return <div className={s.message}>{props.message}</div>;\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './DialogChat.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport {FormType} from \"../../hoc/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nfunction DialogChat(props) {\r\n    let messagesElements = props.messages.map((m) => (\r\n        <Message message={m.body} key={m.id}/>\r\n    ));\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(props.currentChat, values.newMessageBody);\r\n        values.newMessageBody = null;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.chat}>\r\n                <div className={s.messages}>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Textarea = FormType('textarea');\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength10]}\r\n                    name=\"newMessageBody\"\r\n                    placeholder=\"Enter your message\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add Message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm',\r\n})(AddMessageForm);\r\n\r\nexport default DialogChat;\r\n","import React from 'react';\r\nimport {requestDialogs, requestMessages, sendMessage, setCurrentChat, startChatting} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, Route, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport DialogChat from \"./DialogChat\";\r\n\r\n\r\nclass DialogsContainer extends React.PureComponent {\r\n\r\n    refreshDialogs() {\r\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            this.props.history.push('/dialogs');\r\n            this.props.requestDialogs();\r\n        } else {\r\n            this.props.requestMessages(userId)\r\n            this.props.setCurrentChat(userId)\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshDialogs()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshDialogs();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                {this.props.match.params.userId ? <DialogChat {...this.props} /> : <Dialogs {...this.props} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.dialogsPage.users,\r\n        messages: state.dialogsPage.messages,\r\n        isFetching: state.dialogsPage.isFetching,\r\n        currentChat: state.dialogsPage.currentChat,\r\n    };\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage, requestDialogs, startChatting, setCurrentChat, requestMessages}),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(DialogsContainer);\r\n"],"sourceRoot":""}