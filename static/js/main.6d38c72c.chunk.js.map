{"version":3,"sources":["api/api.js","components/Users/users.module.css","components/common/Preloader/Preloader.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","utils/validators/validators.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","hoc/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/UsersMessageForm.js","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/profile-reducer.js","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/common/FormsControls/CreateField.js","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","hoc/withSuspense.js","index.js","components/common/Preloader/Preloader.jsx","hoc/FormsControls.module.css","assets/images/User.jpg","redux/dialogs-reducer.js","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["instanse","axios","withCredentials","baseURL","headers","UsersAPI","getUsers","currentPage","pageSise","get","follow","userId","post","unfollow","delete","getProfile","console","warn","ProfileAPI","getStatus","updateStatus","status","put","savePhoto","photoFIle","formData","FormData","append","saveProfile","profile","AuthAPI","me","login","email","password","rememberMe","captcha","logout","SecurityAPI","DialogsAPI","getDialogs","getChatting","id","getMessages","sendMessage","body","module","exports","required","value","maxLengthCreator","maxLength","length","FormType","Element","input","meta","touched","error","type","props","hasError","className","styles","formControl","chooseInputFormat","Boolean","window","location","hostname","match","Navbar","s","nav","item","to","activeClassName","activeLink","News","Settings","Music","updateObjectinArray","items","itemId","objPropName","newObjProps","map","u","initialState","users","pageSize","portionSize","totalItemsCount","isFetching","followingInProgress","followSucces","unfollowSucces","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","state","action","followed","filter","Paginator","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","classNames","selectedPage","key","e","User","user","setFormControl","setReceiver","src","photos","small","userPhoto","disabled","some","name","Textarea","maxLength10","AddMessageUserFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Users","receiver","setCurrentUser","values","sendUserMessage","newMessageBody","usersPage","getPageSize","getPortionSize","getTotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Preloader","React","Component","compose","connect","page","response","totalCount","posts","message","likesCount","profileEditStatus","setUserProfile","setStatus","setProfileEditStatus","editIsFetching","getUserProfile","profileReducer","newPost","newPostText","postId","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","onBlur","autoFocus","createField","validators","text","Input","ProfileDataReduxForm","profileDataForm","formSummaryError","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","activeClass","setActiveClass","profileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsMenu","contactTitle","contactValue","Contact","ProfileInfo","description","large","mainPhoto","target","files","initialValues","formDate","Post","AddPostFormRedux","newPostBody","MyPosts","postsElements","reverse","addPost","MyPostsContainer","profilePage","addPostCreator","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","snapshot","auth","isAuth","alert","file","getState","stopSubmit","_error","messages","withRouter","Header","header","loginBlock","Logout","captchaURL","setAuthUserData","payload","setCaptchaURL","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","Login","url","initialized","appReducer","sidebarReducer","reducers","combineReducers","dialogsPage","dialogsReducer","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","ThunkMiddleware","__store__","DialogsContainer","lazy","App","catchAllUnhandledErrors","promiseRejectionEvent","log","initializeApp","addEventListener","removeEventListener","exact","from","path","render","Suspense","fallback","AppContainer","promise","Promise","all","then","MainSNApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","ldsDualRing","currentChat","dialogsIsFetching","setCurrentChat","requestMessages","startChatting","response2","requestDialogs","respone","dialogs"],"mappings":"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","file":"static/js/main.6d38c72c.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '51707569-2172-436d-84e1-481fec77399c',\r\n    },\r\n});\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 1, pageSise = 10) {\r\n        return instanse\r\n            .get(`users?page=${currentPage}&count=${pageSise}`);\r\n    },\r\n    follow(userId) {\r\n        return instanse.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instanse\r\n            .delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Old API method must be changed');\r\n        return ProfileAPI.getProfile(userId);\r\n    },\r\n};\r\nexport const ProfileAPI = {\r\n    getProfile(userId) {\r\n        return instanse.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instanse.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instanse.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFIle) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFIle)\r\n        return instanse.put(`profile/photo`, formData)\r\n    },\r\n    saveProfile(profile) {\r\n        return instanse.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const AuthAPI = {\r\n    me() {\r\n        return instanse.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instanse.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instanse.delete(`auth/login`);\r\n    },\r\n};\r\n\r\nexport const SecurityAPI = {\r\n    captcha() {\r\n        return instanse.get(`security/get-captcha-url`)\r\n    }\r\n}\r\nexport const DialogsAPI = {\r\n    getDialogs() {\r\n        return instanse.get(`dialogs`)\r\n    },\r\n    getChatting(id) {\r\n        return instanse.put('dialogs/' + id)\r\n    },\r\n    getMessages(id) {\r\n        return instanse.get(`dialogs/${id}/messages`)\r\n    },\r\n    sendMessage(id, body) {\r\n        return instanse.post(`dialogs/${id}/messages`, {body:body})\r\n    }\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3nFrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__1DtRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__f61bo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1gc_1\",\"item\":\"Navbar_item__2crGM\",\"activeLink\":\"Navbar_activeLink__1RMXt\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1bfJH\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3GBzV\",\"contact\":\"ProfileInfo_contact__1CwjK\",\"profileDataForm\":\"ProfileInfo_profileDataForm__xi4V0\",\"show\":\"ProfileInfo_show__3sf3z\",\"profileData\":\"ProfileInfo_profileData__1xQSF\",\"show2\":\"ProfileInfo_show2__Rq9bM\",\"contactsMenu\":\"ProfileInfo_contactsMenu__WsN2e\",\"passive\":\"ProfileInfo_passive__29738\",\"active\":\"ProfileInfo_active__bD8yG\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const FormType = (Element) => ({input, meta: {touched, error}, type, ...props}) => {\r\n\r\n    const hasError = touched && error;\r\n\r\n    let chooseInputFormat = (type) => {\r\n        return <Element {...input} {...props} type={type}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {chooseInputFormat(type)}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.activeLink}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/login\" activeClassName={s.activeLink}>\r\n          Login\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nfunction News(props) {\r\n  return <div>News</div>;\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nfunction Settings(props) {\r\n  return <div>Settings</div>;\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nfunction Music(props) {\r\n  return <div>Music</div>;\r\n}\r\n\r\nexport default Music;\r\n","export const updateObjectinArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map((u) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {UsersAPI} from '../api/api';\r\nimport {updateObjectinArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\nconst SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    portionSize: 10,\r\n    totalItemsCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectinArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectinArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalItemsCount: action.totalItemsCount};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id) => id != action.userId),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSucces = (userId) => ({\r\n    type: FOLLOW,\r\n    userId,\r\n});\r\n\r\nexport const unfollowSucces = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId,\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users,\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalItemsCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalItemsCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) =>\r\n    async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let response = await UsersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount));\r\n\r\n    };\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod;\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, UsersAPI.follow(userId), followSucces)\r\n    };\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, UsersAPI.unfollow(userId), unfollowSucces);\r\n    }\r\n};\r\n\r\nexport default usersReducer;\r\n","import React, {useEffect, useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport classNames from 'classnames'\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Prev page</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => (\r\n                    <span\r\n                        className={classNames(styles.pages, {[styles.selectedPage]: currentPage === p})}\r\n                        key={p}\r\n                        onClick={(e) => {\r\n                            onPageChanged(p);\r\n                        }}>{p}</span>\r\n                ))\r\n            }\r\n\r\n            {portionNumber < portionCount &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>Next page</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;\r\n\r\n//className={styles.pages && (currentPage === p ? styles.selectedPage : styles.notSelectedPage)}","import React, {useState} from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/User.jpg';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FormType} from \"../../hoc/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow, setFormControl,setReceiver}) => {\r\n\r\n    let openForm = (id) => {\r\n        setFormControl(true)\r\n        setReceiver(id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <span>\r\n            <div>\r\n              <NavLink to={'/profile/' + user.id}>\r\n                <img\r\n                    src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                    className={styles.userPhoto}\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {user.followed ? (\r\n                  <button\r\n                      disabled={followingInProgress.some((id) => id === user.id)}\r\n                      onClick={() => {\r\n                          unfollow(user.id);\r\n                      }}\r\n                  >\r\n                      Unfollow\r\n                  </button>\r\n              ) : (\r\n                  <button\r\n                      disabled={followingInProgress.some((id) => id === user.id)}\r\n                      onClick={() => {\r\n                          follow(user.id);\r\n                      }}\r\n                  >\r\n                      Follow\r\n                  </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n            <span>\r\n            <span>\r\n              <div>{user.name}</div>\r\n              <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n              <span onClick={() => openForm(user.id)}>{'Write your message'}</span>\r\n            </span>\r\n          </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default User;\r\n","import {FormType} from \"../../hoc/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nconst Textarea = FormType('textarea');\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddMessageUserForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field\r\n                        component={Textarea}\r\n                        validate={[required, maxLength10]}\r\n                        name=\"newMessageBody\"\r\n                        placeholder=\"Enter your message\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button>Add Message</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageUserFormRedux = reduxForm({\r\n    form: 'userAddMessageForm',\r\n})(AddMessageUserForm);\r\n\r\nexport default AddMessageUserFormRedux;","import React, {useState} from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageUserFormRedux from \"./UsersMessageForm\";\r\n\r\n\r\nlet Users = ({currentPage, onPageChanged, totalItemsCount, pageSize, users, portionSize, ...props}) => {\r\n\r\n\r\n    let [formControl, setFormControl] = useState(false)\r\n    let [receiver, setReceiver] = useState(null)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendUserMessage(receiver, values.newMessageBody);\r\n        values.newMessageBody = null;\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalItemsCount} pageSize={pageSize} portionSize={portionSize}/>\r\n            <div>\r\n                {users.map((u) => <User user={u} key={u.id} followingInProgress={props.followingInProgress}\r\n                                        unfollow={props.unfollow} follow={props.follow}\r\n                                        setCurrentUser={props.setCurrentUser} setFormControl={setFormControl}\r\n                                        setReceiver={setReceiver}/>\r\n                )}\r\n\r\n            </div>\r\n            {formControl\r\n                ? <AddMessageUserFormRedux onSubmit={addNewMessage}/>\r\n                : null}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Users;\r\n","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getPortionSize = (state) => {\r\n  return state.usersPage.portionSize;\r\n};\r\nexport const getTotalItemsCount = (state) => {\r\n  return state.usersPage.totalItemsCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getCurrentUser = (state) => {\r\n  return state.usersPage.currentUser;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getPageSize,\r\n    getUsers,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress, getPortionSize, getTotalItemsCount,\r\n} from '../../redux/users-selectors';\r\nimport {sendUserMessage} from \"../../redux/dialogs-reducer\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let pageSize = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalItemsCount={this.props.totalItemsCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    portionSize={this.props.portionSize}\r\n                    sendUserMessage={this.props.sendUserMessage}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateTopProps = (state) => {\r\n    return {\r\n        portionSize: getPortionSize(state),\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalItemsCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateTopProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers,\r\n        sendUserMessage,\r\n    })\r\n)(UsersContainer);\r\n","import {UsersAPI, ProfileAPI} from '../api/api';\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst PROFILE_EDIT_STATUS = 'PROFILE_EDIT_STATUS';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 11},\r\n        {id: 2, message: 'It`s my first post', likesCount: 23},\r\n    ],\r\n    profile: null,\r\n    profileEditStatus: false,\r\n    isFetching: false,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((p) => p.id !== action.postId),\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos},\r\n            };\r\n        }\r\n        case PROFILE_EDIT_STATUS: {\r\n            return {\r\n                ...state,\r\n                profileEditStatus: action.status,\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state,\r\n                isFetching: action.isFetching};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText,\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status,\r\n});\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId,\r\n});\r\nexport const savePhotoSuccess = (photos) => ({\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photos,\r\n});\r\nexport const setProfileEditStatus = (status) => ({\r\n    type: PROFILE_EDIT_STATUS,\r\n    status,\r\n});\r\nexport const editIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await UsersAPI.getProfile(userId)\r\n\r\n    dispatch(setUserProfile(response.data));\r\n\r\n};\r\n\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await ProfileAPI.getStatus(userId)\r\n\r\n    dispatch(setStatus(response.data));\r\n\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await ProfileAPI.updateStatus(status)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        alert(error)\r\n    }\r\n\r\n\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await ProfileAPI.savePhoto(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await ProfileAPI.saveProfile(profile)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setProfileEditStatus(false))\r\n        dispatch(editIsFetching(false))\r\n        dispatch(getUserProfile(userId));\r\n    } else if (response.data.resultCode === 1) {\r\n        dispatch(editIsFetching(false))\r\n        //dispatch(setProfileEditStatus(true))\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport profileReducer from '../../../../redux/profile-reducer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n         <b>Status</b>: <span onDoubleClick={activateEditMode}>\r\n            {props.status || '-----'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport styles from './CreateField.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props, text = '') =>\r\n    (<div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            validate={validators}\r\n            {...props}\r\n        /> {text}\r\n    </div>)\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport styles from \"../../../../hoc/FormsControls.module.css\";\r\nimport {createField} from \"../../../common/FormsControls/CreateField\";\r\nimport {FormType} from \"../../../../hoc/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst Input = FormType('input');\r\nconst Textarea = FormType('textarea');\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error, isFetching}) => {\r\n    return (\r\n        <form className={s.profileDataForm} onSubmit={handleSubmit}>\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            <div>\r\n                {isFetching ? <button disabled>save</button>\r\n                    : <button>save</button>\r\n                }\r\n            </div>\r\n            <div>\r\n                <b>Full name</b>: {createField('Full name', 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:\r\n                {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField('About me', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, 'contacts.' + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'edit-profile',\r\n})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../../assets/images/User.jpg';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nfunction ProfileInfo({\r\n                         profile, status, updateStatus, isOwner, savePhoto, saveProfile,\r\n                         profileEditStatus, setProfileEditStatus, editIsFetching, isFetching,\r\n                     }) {\r\n\r\n\r\n    const onSubmit = (formDate) => {\r\n        editIsFetching(true)\r\n        saveProfile(formDate);\r\n    };\r\n    const goToEditMode = () => {\r\n        setProfileEditStatus(true);\r\n    };\r\n    if (!profile) {\r\n        return <Preloader/>;\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n                {profileEditStatus\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}\r\n                                       isFetching={isFetching}/>\r\n                    :\r\n                    <ProfileData profile={profile} isOwner={isOwner}\r\n                                 goToEditMode={goToEditMode}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    let [activeClass, setActiveClass] = useState('active');\r\n\r\n    return (\r\n        <div className={s.profileData}>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div className={s[activeClass]}>\r\n                <div className={s.contactsMenu} onClick={() => setActiveClass('passive')}></div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key =>\r\n                <Contact contactTitle={key} key={key} contactValue={profile.contacts[key]}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from '../../../utils/validators/validators';\r\nimport { FormType } from '../../../hoc/FormsControls';\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => (\r\n      <Post message={p.message} key={p.id} likesCount={p.likesCount} />\r\n    ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n  return (\r\n    <div className={s.posts}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.post}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Textarea = FormType('textarea');\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.newPostBody}>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostBody\"\r\n          placeholder=\"Post\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n  form: 'addPostForm',\r\n})(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostCreator } from './../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo {...props}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport * as axios from 'axios';\r\nimport {\r\n    setUserProfile,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus, savePhoto, saveProfile, setProfileEditStatus, editIsFetching,\r\n} from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile isOwner={!this.props.match.params.userId} {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    profileEditStatus: state.profilePage.profileEditStatus,\r\n    isFetching: state.profilePage.isFetching,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n        setProfileEditStatus,\r\n        editIsFetching,\r\n    }),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\"></img>\r\n      <div className={s.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.Logout}>Logout</button>{' '}\r\n          </div>\r\n        ) : (\r\n          <NavLink to={'/login'}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {AuthAPI, SecurityAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_URL = 'auth/SET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null,\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth,\r\n    },\r\n});\r\nexport const setCaptchaURL = (captchaURL) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        captchaURL\r\n    },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await AuthAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n};\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let response = await SecurityAPI.captcha();\r\n    let captchaURL = response.data.url;\r\n    dispatch(setCaptchaURL(captchaURL))\r\n\r\n};\r\n\r\nexport const Login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\nexport const Logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await AuthAPI.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { Logout })(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport styles from '../../hoc/FormsControls.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {FormType} from '../../hoc/FormsControls';\r\nimport {connect} from 'react-redux';\r\nimport {Logout, Login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {createField} from \"../common/FormsControls/CreateField\";\r\n\r\nconst Input = FormType('input');\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaURL}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'Remember Me')}\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            {captchaURL && <img src={captchaURL}/>}\r\n            {captchaURL && createField('Write correct symbols', 'captcha', [required], Input) }\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm);\r\n\r\nconst LoginAuth = (props) => {\r\n    const onSubmit = (formDate) => {\r\n        props.Login(formDate.email, formDate.password, formDate.rememberMe, formDate.captcha);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaURL: state.auth.captchaURL,\r\n});\r\n\r\nexport default connect(mapStateToProps, {Logout, Login})(LoginAuth);\r\n","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCES = 'INITIALIZED_SUCCES';\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCES:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSucces = () => ({\r\n  type: INITIALIZED_SUCCES,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSucces());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","let initialState = {};\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\nexport default sidebarReducer;\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(ThunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(ThunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport Music from './components/Music/Music';\r\n\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport {connect, Provider} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n        alert('Some errors')\r\n        console.log(promiseRejectionEvent)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>;\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className=\"app-wrapper__content\">\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"/profile\"/>\r\n                        <Route path=\"/dialogs/:userId?\" render={withSuspense(DialogsContainer)}/>\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                        <Route path=\"/news\" render={() => <News/>}/>\r\n                        <Route path=\"/login\" render={() => <Login/>}/>\r\n                        <Route path=\"/music\" render={() => <Music/>}/>\r\n                        <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                        <Route path=\"*\" render={() => <div>404</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n});\r\n\r\nlet AppContainer = compose(\r\n    connect(mapStateToProps, {initializeApp,}), withRouter)(App);\r\n\r\nconst MainSNApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\nexport default MainSNApp","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n};\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainSNApp from \"./App\";\r\n\r\nReactDOM.render(<MainSNApp/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\nfunction Preloader(props) {\r\n  return <div className={styles.ldsDualRing}></div>;\r\n}\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__eVlZ0\",\"error\":\"FormsControls_error__1cRJs\",\"formSummaryError\":\"FormsControls_formSummaryError__3XQQn\"};","module.exports = __webpack_public_path__ + \"static/media/User.a4c1f699.jpg\";","import {DialogsAPI, ProfileAPI} from \"../api/api\";\r\n\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\nconst SET_DIALOG_USER_DATA = 'SET_DIALOG_USER_DATA'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst SET_DIALOG_USER_MESSAGES = 'SET_DIALOG_USER_MESSAGES'\r\nconst SET_CURRENT_CHAT = 'SET_CURRENT_CHAT'\r\nconst SET_CURRENT_CHAT_INFO = 'SET_CURRENT_CHAT_INFO'\r\n\r\n\r\nlet initialState = {\r\n    currentChat: null,\r\n    isFetching: false,\r\n    profile: null,\r\n    users: [],\r\n    messages: [],\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            };\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case SET_CURRENT_CHAT: {\r\n            return {\r\n                ...state,\r\n                currentChat: action.id\r\n            }\r\n        }\r\n        case SET_DIALOG_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                users: action.dialogs\r\n            }\r\n        }\r\n        case SET_DIALOG_USER_MESSAGES: {\r\n            return {\r\n                ...state,\r\n                messages: action.items.reverse()\r\n            }\r\n        }\r\n        case SET_CURRENT_CHAT_INFO: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setDialogUserData = (dialogs) => ({\r\n    type: SET_DIALOG_USER_DATA,\r\n    dialogs\r\n});\r\nexport const setDialogUserMessages = (items) => ({\r\n    type: SET_DIALOG_USER_MESSAGES,\r\n    items\r\n});\r\n\r\nexport const dialogsIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n});\r\nexport const setCurrentChat = (id) => ({\r\n    type: SET_CURRENT_CHAT,\r\n    id,\r\n});\r\n\r\nexport const setCurrentChatInfo = (profile) => ({\r\n    type: SET_CURRENT_CHAT_INFO,\r\n    profile,\r\n});\r\n\r\nexport const sendMessage = (id, body) =>\r\n    async (dispatch) => {\r\n        let response = await DialogsAPI.sendMessage(id, body)\r\n        dispatch(requestMessages(id))\r\n    }\r\nexport const sendUserMessage = (id, body) =>\r\n    async (dispatch) => {\r\n        let response = await DialogsAPI.sendMessage(id, body)\r\n    }\r\n\r\n\r\nexport const startChatting = (id) =>\r\n    async (dispatch) => {\r\n        let response = await DialogsAPI.getChatting(id)\r\n    }\r\n\r\nexport const requestMessages = (id) =>\r\n    async (dispatch) => {\r\n\r\n        let response = await DialogsAPI.getMessages(id)\r\n        dispatch(setDialogUserMessages(response.data.items))\r\n        let response2 = await ProfileAPI.getProfile(id)\r\n        dispatch(setCurrentChatInfo(response2.data))\r\n\r\n    }\r\n\r\nexport const requestDialogs = () =>\r\n    async (dispatch) => {\r\n        dispatch(dialogsIsFetching(true))\r\n        let respone = await DialogsAPI.getDialogs();\r\n        dispatch(setDialogUserData(respone.data))\r\n        dispatch(dialogsIsFetching(false))\r\n\r\n    }\r\n\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__3KXEK\",\"selectedPage\":\"Paginator_selectedPage___Nuxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1sCw_\",\"post\":\"MyPosts_post__1TzJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ReLy\",\"loginBlock\":\"Header_loginBlock__3S3Bv\"};"],"sourceRoot":""}