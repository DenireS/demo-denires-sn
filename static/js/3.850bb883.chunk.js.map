{"version":3,"sources":["components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","description","src","photos","large","Preloader","Post","item","message","likesCount","Textarea","FormType","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","newPostBody","Field","component","name","placeholder","validate","required","MyPosts","console","log","postsElements","posts","reverse","map","p","key","id","values","addPost","post","MyPostsContainer","connect","state","profilePage","dispatch","newPostText","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.850bb883.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1bfJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1sCw_\",\"post\":\"MyPosts_post__1TzJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__f61bo\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport profileReducer from '../../../../redux/profile-reducer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || '-----'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nfunction ProfileInfo({profile, status, updateStatus}) {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.description}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWithHooks\r\n          status={status} updateStatus={updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from '../../../utils/validators/validators';\r\nimport { FormType } from '../../../hoc/FormsControls';\r\n\r\nconst MyPosts = (props) => {\r\n  console.log('render');\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => (\r\n      <Post message={p.message} key={p.id} likesCount={p.likesCount} />\r\n    ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n  return (\r\n    <div className={s.posts}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.post}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Textarea = FormType('textarea');\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.newPostBody}>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostBody\"\r\n          placeholder=\"Post\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n  form: 'addPostForm',\r\n})(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostCreator } from './../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport * as axios from 'axios';\r\nimport {\r\n  setUserProfile,\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n  }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}