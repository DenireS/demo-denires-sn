{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","src","img","dialog__name","to","activeClassName","activeLink","name","Message","message","Textarea","FormType","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsEmelents","dialogs","map","d","key","messagesEmelents","messages","m","isAuth","dialogs__item","values","sendMessageCreator","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,aAAe,8BAA8B,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,wB,+FCe3RC,MAZf,SAAoBC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAWC,IAAEC,QAChB,yBAAKC,IAAKN,EAAMO,MAChB,yBAAKJ,UAAWC,IAAEI,cAAc,kBAAC,IAAD,CAASC,GAAIR,EAAMS,gBAAiBN,IAAEO,YACrEX,EAAMY,SCHEC,MAJf,SAAiBb,GACf,OAAO,yBAAKG,UAAWC,IAAEU,SAAUd,EAAMc,U,0CC8B3C,IAAMC,EAAWC,YAAS,YACpBC,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CACpCC,KAAM,wBADoBD,EAlBL,SAACpB,GACtB,OACE,0BAAMsB,SAAUtB,EAAMuB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWV,EACXW,SAAU,CAACC,IAAUV,GACrBL,KAAK,iBACLgB,YAAY,wBAGhB,6BACE,oDAUOC,EAlDf,SAAiB7B,GACf,IAAI8B,EAAQ9B,EAAM+B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMwB,IAAKD,EAAEjC,GAAIA,GAAIiC,EAAEjC,GAAIK,IAAK4B,EAAE5B,SAEpD8B,EAAmBP,EAAMQ,SAASJ,KAAI,SAACK,GAAD,OACxC,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASsB,IAAKG,EAAErC,QAMtC,OAAKF,EAAMwC,OAGT,yBAAKrC,UAAWC,IAAE6B,SAChB,yBAAK9B,UAAWC,IAAEqC,eAAgBT,GAClC,yBAAK7B,UAAWC,IAAEkC,UAChB,6BAAMD,GACN,kBAAClB,EAAD,CAAqBG,SAXP,SAACoB,GACnB1C,EAAM2C,mBAAmBD,EAAOE,qBAGR,kBAAC,IAAD,CAAUnC,GAAI,Y,wCClBtCoC,EAA6B,SAACf,GAAD,MAAY,CAC3CU,OAAQV,EAAMgB,KAAKN,S,OCiBNO,sBACbC,aAfoB,SAAClB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACkB,GACxB,MAAO,CACLN,mBAAoB,SAACC,GACnBK,EAASN,YAAmBC,UDTF,SAACM,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAKpD,MAAMwC,OACT,kBAACU,EAAcE,KAAKpD,OADI,kBAAC,IAAD,CAAUS,GAAI,eAHJ,GACb4C,IAAMH,WAStC,OAHqCF,YAAQH,EAARG,CACnCG,KCMWJ,CAGblB","file":"static/js/4.c5e5b867.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1PoEC\",\"dialogs__item\":\"Dialogs_dialogs__item__3XPTy\",\"dialog\":\"Dialogs_dialog__31Tr1\",\"dialog__name\":\"Dialogs_dialog__name__kHnAw\",\"activeLink\":\"Dialogs_activeLink__3nhdI\",\"messages\":\"Dialogs_messages__2vLQu\",\"message\":\"Dialogs_message__AuSIq\",\"post\":\"Dialogs_post__1tN8A\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction DialogItem(props) {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <img src={props.img}></img>\r\n      <div className={s.dialog__name}><NavLink to={path} activeClassName={s.activeLink}>\r\n      {props.name}\r\n      </NavLink></div>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nfunction Message(props) {\r\n  return <div className={s.message}>{props.message}</div>;\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { FormType } from '../../hoc/FormsControls';\r\n\r\nfunction Dialogs(props) {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsEmelents = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} img={d.img} />\r\n  ));\r\n  let messagesEmelents = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n  let addNewMessage = (values) => {\r\n    props.sendMessageCreator(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs__item}>{dialogsEmelents}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesEmelents}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst Textarea = FormType('textarea');\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add Message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n  form: 'dialogAddMessageForm',\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessageCreator: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}