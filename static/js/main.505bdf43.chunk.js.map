{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/users.module.css","components/common/Preloader/Preloader.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/profile-reducer.js","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/common/FormsControls/CreateField.js","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","hoc/withSuspense.js","index.js","hoc/FormsControls.js","hoc/FormsControls.module.css","utils/validators/validators.js","assets/images/User.jpg","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["initialState","dialogs","id","name","img","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","News","props","Settings","Music","instanse","axios","withCredentials","baseURL","headers","UsersAPI","currentPage","pageSise","get","userId","post","delete","console","warn","ProfileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFIle","formData","FormData","append","saveProfile","profile","AuthAPI","email","password","rememberMe","captcha","SecurityAPI","updateObjectinArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","portionSize","totalItemsCount","isFetching","followingInProgress","followSucces","unfollowSucces","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","filter","Paginator","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","classNames","selectedPage","key","e","User","user","unfollow","follow","src","photos","small","userPhoto","disabled","some","Users","Preloader","ldsDualRing","getUsers","usersPage","getPageSize","getPortionSize","getTotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","React","Component","compose","connect","page","response","totalCount","posts","likesCount","profileEditStatus","setUserProfile","setStatus","setProfileEditStatus","editIsFetching","getUserProfile","profileReducer","newPost","newPostText","postId","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","value","onBlur","autoFocus","createField","placeholder","validators","component","text","Field","validate","Input","FormType","Textarea","ProfileDataReduxForm","reduxForm","form","handleSubmit","error","profileDataForm","onSubmit","formSummaryError","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","activeClass","setActiveClass","profileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsMenu","contactTitle","contactValue","Contact","ProfileInfo","description","large","mainPhoto","target","files","length","initialValues","formDate","Post","maxLength10","maxLengthCreator","AddPostFormRedux","newPostBody","required","MyPosts","postsElements","reverse","values","addPost","MyPostsContainer","profilePage","addPostCreator","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","snapshot","auth","isAuth","alert","file","getState","stopSubmit","_error","withRouter","Header","header","loginBlock","login","Logout","captchaURL","setAuthUserData","payload","setCaptchaURL","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","Login","url","initialized","appReducer","sidebarReducer","reducers","combineReducers","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","ThunkMiddleware","__store__","DialogsContainer","lazy","App","catchAllUnhandledErrors","promiseRejectionEvent","log","initializeApp","addEventListener","removeEventListener","exact","from","path","render","Suspense","fallback","AppContainer","promise","Promise","all","then","MainSNApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","Element","input","meta","touched","hasError","formControl","chooseInputFormat","maxLength"],"mappings":"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","file":"static/js/main.505bdf43.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    {\r\n      id: 1,\r\n      name: 'Sasha',\r\n      img:\r\n        'https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Sanyok',\r\n      img:\r\n        'https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Aleksandr',\r\n      img:\r\n        'https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Shurik',\r\n      img:\r\n        'https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Shura',\r\n      img:\r\n        'https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Sancho',\r\n      img:\r\n        'https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg',\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Sashunya',\r\n      img:\r\n        'https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg',\r\n    },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: 'Yo' },\r\n    { id: 2, message: 'How are you' },\r\n    { id: 3, message: 'Hi' },\r\n    { id: 4, message: 'Yo' },\r\n    { id: 5, message: 'Yo' },\r\n  ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: body }],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageBody,\r\n});\r\n\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3nFrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__1DtRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__f61bo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1gc_1\",\"item\":\"Navbar_item__2crGM\",\"activeLink\":\"Navbar_activeLink__1RMXt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1bfJH\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3GBzV\",\"contact\":\"ProfileInfo_contact__1CwjK\",\"profileDataForm\":\"ProfileInfo_profileDataForm__xi4V0\",\"show\":\"ProfileInfo_show__3sf3z\",\"profileData\":\"ProfileInfo_profileData__1xQSF\",\"show2\":\"ProfileInfo_show2__Rq9bM\",\"contactsMenu\":\"ProfileInfo_contactsMenu__WsN2e\",\"passive\":\"ProfileInfo_passive__29738\",\"active\":\"ProfileInfo_active__bD8yG\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.activeLink}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/login\" activeClassName={s.activeLink}>\r\n          Login\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nfunction News(props) {\r\n  return <div>News</div>;\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nfunction Settings(props) {\r\n  return <div>Settings</div>;\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nfunction Music(props) {\r\n  return <div>Music</div>;\r\n}\r\n\r\nexport default Music;\r\n","import * as axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '51707569-2172-436d-84e1-481fec77399c',\r\n    },\r\n});\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 1, pageSise = 10) {\r\n        return instanse\r\n            .get(`users?page=${currentPage}&count=${pageSise}`);\r\n    },\r\n    follow(userId) {\r\n        return instanse.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instanse\r\n            .delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Old API method must be changed');\r\n        return ProfileAPI.getProfile(userId);\r\n    },\r\n};\r\nexport const ProfileAPI = {\r\n    getProfile(userId) {\r\n        return instanse.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instanse.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instanse.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFIle) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFIle)\r\n        return instanse.put(`profile/photo`, formData)\r\n    },\r\n    saveProfile(profile) {\r\n        return instanse.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const AuthAPI = {\r\n    me() {\r\n        return instanse.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instanse.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instanse.delete(`auth/login`);\r\n    },\r\n};\r\n\r\nexport const SecurityAPI = {\r\n    captcha() {\r\n        return instanse.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n","export const updateObjectinArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map((u) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {UsersAPI} from '../api/api';\r\nimport {updateObjectinArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    portionSize: 10,\r\n    totalItemsCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectinArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectinArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalItemsCount: action.totalItemsCount};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id) => id != action.userId),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSucces = (userId) => ({\r\n    type: FOLLOW,\r\n    userId,\r\n});\r\n\r\nexport const unfollowSucces = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId,\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users,\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalItemsCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalItemsCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) =>\r\n    async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let response = await UsersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount));\r\n\r\n    };\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod;\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, UsersAPI.follow(userId), followSucces)\r\n    };\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, UsersAPI.unfollow(userId), unfollowSucces);\r\n    }\r\n};\r\n\r\nexport default usersReducer;\r\n","import React, {useEffect, useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport classNames from 'classnames'\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Prev page</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => (\r\n                    <span\r\n                        className={classNames(styles.pages, {[styles.selectedPage]: currentPage === p})}\r\n                        key={p}\r\n                        onClick={(e) => {\r\n                            onPageChanged(p);\r\n                        }}>{p}</span>\r\n                ))\r\n            }\r\n\r\n            {portionNumber < portionCount &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>Next page</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;\r\n\r\n//className={styles.pages && (currentPage === p ? styles.selectedPage : styles.notSelectedPage)}","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/User.jpg';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n          <span>\r\n            <div>\r\n              <NavLink to={'/profile/' + user.id}>\r\n                <img\r\n                    src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                    className={styles.userPhoto}\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {user.followed ? (\r\n                  <button\r\n                      disabled={followingInProgress.some((id) => id === user.id)}\r\n                      onClick={() => {\r\n                          unfollow(user.id);\r\n                      }}\r\n                  >\r\n                      Unfollow\r\n                  </button>\r\n              ) : (\r\n                  <button\r\n                      disabled={followingInProgress.some((id) => id === user.id)}\r\n                      onClick={() => {\r\n                          follow(user.id);\r\n                      }}\r\n                  >\r\n                      Follow\r\n                  </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n            <span>\r\n            <span>\r\n              <div>{user.name}</div>\r\n              <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{'user.location.country'}</div>\r\n              <div>{'user.location.city'}</div>\r\n            </span>\r\n          </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, onPageChanged, totalItemsCount, pageSize, users, portionSize, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalItemsCount} pageSize={pageSize} portionSize={portionSize}/>\r\n            <div>\r\n                {users.map((u) => <User user={u} key={u.id} followingInProgress={props.followingInProgress}\r\n                                        unfollow={props.unfollow} follow={props.follow}/>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\nfunction Preloader(props) {\r\n  return <div className={styles.ldsDualRing}></div>;\r\n}\r\n\r\nexport default Preloader;\r\n","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getPortionSize = (state) => {\r\n  return state.usersPage.portionSize;\r\n};\r\nexport const getTotalItemsCount = (state) => {\r\n  return state.usersPage.totalItemsCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getPageSize,\r\n    getUsers,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress, getPortionSize, getTotalItemsCount,\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let pageSize = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalItemsCount={this.props.totalItemsCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    portionSize={this.props.portionSize}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateTopProps = (state) => {\r\n    return {\r\n        portionSize: getPortionSize(state),\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalItemsCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateTopProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers,\r\n    })\r\n)(UsersContainer);\r\n","import {UsersAPI, ProfileAPI} from '../api/api';\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst PROFILE_EDIT_STATUS = 'PROFILE_EDIT_STATUS';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 11},\r\n        {id: 2, message: 'It`s my first post', likesCount: 23},\r\n    ],\r\n    profile: null,\r\n    profileEditStatus: false,\r\n    isFetching: false,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((p) => p.id !== action.postId),\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos},\r\n            };\r\n        }\r\n        case PROFILE_EDIT_STATUS: {\r\n            return {\r\n                ...state,\r\n                profileEditStatus: action.status,\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state,\r\n                isFetching: action.isFetching};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText,\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status,\r\n});\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId,\r\n});\r\nexport const savePhotoSuccess = (photos) => ({\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photos,\r\n});\r\nexport const setProfileEditStatus = (status) => ({\r\n    type: PROFILE_EDIT_STATUS,\r\n    status,\r\n});\r\nexport const editIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await UsersAPI.getProfile(userId)\r\n\r\n    dispatch(setUserProfile(response.data));\r\n\r\n};\r\n\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await ProfileAPI.getStatus(userId)\r\n\r\n    dispatch(setStatus(response.data));\r\n\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await ProfileAPI.updateStatus(status)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        alert(error)\r\n    }\r\n\r\n\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await ProfileAPI.savePhoto(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await ProfileAPI.saveProfile(profile)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setProfileEditStatus(false))\r\n        dispatch(editIsFetching(false))\r\n        dispatch(getUserProfile(userId));\r\n    } else if (response.data.resultCode === 1) {\r\n        dispatch(editIsFetching(false))\r\n        //dispatch(setProfileEditStatus(true))\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport profileReducer from '../../../../redux/profile-reducer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n         <b>Status</b>: <span onDoubleClick={activateEditMode}>\r\n            {props.status || '-----'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport styles from './CreateField.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props, text = '') =>\r\n    (<div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            validate={validators}\r\n            {...props}\r\n        /> {text}\r\n    </div>)\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport styles from \"../../../../hoc/FormsControls.module.css\";\r\nimport {createField} from \"../../../common/FormsControls/CreateField\";\r\nimport {FormType} from \"../../../../hoc/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst Input = FormType('input');\r\nconst Textarea = FormType('textarea');\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error, isFetching}) => {\r\n    return (\r\n        <form className={s.profileDataForm} onSubmit={handleSubmit}>\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            <div>\r\n                {isFetching ? <button disabled>save</button>\r\n                    : <button>save</button>\r\n                }\r\n            </div>\r\n            <div>\r\n                <b>Full name</b>: {createField('Full name', 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:\r\n                {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField('About me', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, 'contacts.' + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'edit-profile',\r\n})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../../assets/images/User.jpg';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nfunction ProfileInfo({\r\n                         profile, status, updateStatus, isOwner, savePhoto, saveProfile,\r\n                         profileEditStatus, setProfileEditStatus, editIsFetching, isFetching,\r\n                     }) {\r\n\r\n\r\n    const onSubmit = (formDate) => {\r\n        editIsFetching(true)\r\n        saveProfile(formDate);\r\n    };\r\n    const goToEditMode = () => {\r\n        setProfileEditStatus(true);\r\n    };\r\n    if (!profile) {\r\n        return <Preloader/>;\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n                {profileEditStatus\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}\r\n                                       isFetching={isFetching}/>\r\n                    :\r\n                    <ProfileData profile={profile} isOwner={isOwner}\r\n                                 goToEditMode={goToEditMode}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    let [activeClass, setActiveClass] = useState('active');\r\n\r\n    return (\r\n        <div className={s.profileData}>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div className={s[activeClass]}>\r\n                <div className={s.contactsMenu} onClick={() => setActiveClass('passive')}></div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key =>\r\n                <Contact contactTitle={key} key={key} contactValue={profile.contacts[key]}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from '../../../utils/validators/validators';\r\nimport { FormType } from '../../../hoc/FormsControls';\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => (\r\n      <Post message={p.message} key={p.id} likesCount={p.likesCount} />\r\n    ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n  return (\r\n    <div className={s.posts}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.post}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Textarea = FormType('textarea');\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.newPostBody}>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostBody\"\r\n          placeholder=\"Post\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n  form: 'addPostForm',\r\n})(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostCreator } from './../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo {...props}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport * as axios from 'axios';\r\nimport {\r\n    setUserProfile,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus, savePhoto, saveProfile, setProfileEditStatus, editIsFetching,\r\n} from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile isOwner={!this.props.match.params.userId} {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    profileEditStatus: state.profilePage.profileEditStatus,\r\n    isFetching: state.profilePage.isFetching,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n        setProfileEditStatus,\r\n        editIsFetching,\r\n    }),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\"></img>\r\n      <div className={s.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.Logout}>Logout</button>{' '}\r\n          </div>\r\n        ) : (\r\n          <NavLink to={'/login'}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {AuthAPI, SecurityAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_URL = 'auth/SET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null,\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth,\r\n    },\r\n});\r\nexport const setCaptchaURL = (captchaURL) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        captchaURL\r\n    },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await AuthAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n};\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let response = await SecurityAPI.captcha();\r\n    let captchaURL = response.data.url;\r\n    dispatch(setCaptchaURL(captchaURL))\r\n\r\n};\r\n\r\nexport const Login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\nexport const Logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await AuthAPI.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { Logout })(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport styles from '../../hoc/FormsControls.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {FormType} from '../../hoc/FormsControls';\r\nimport {connect} from 'react-redux';\r\nimport {Logout, Login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {createField} from \"../common/FormsControls/CreateField\";\r\n\r\nconst Input = FormType('input');\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaURL}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'Remember Me')}\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            {captchaURL && <img src={captchaURL}/>}\r\n            {captchaURL && createField('Write correct symbols', 'captcha', [required], Input) }\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm);\r\n\r\nconst LoginAuth = (props) => {\r\n    const onSubmit = (formDate) => {\r\n        props.Login(formDate.email, formDate.password, formDate.rememberMe, formDate.captcha);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaURL: state.auth.captchaURL,\r\n});\r\n\r\nexport default connect(mapStateToProps, {Logout, Login})(LoginAuth);\r\n","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCES = 'INITIALIZED_SUCCES';\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCES:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSucces = () => ({\r\n  type: INITIALIZED_SUCCES,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSucces());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","let initialState = {};\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\nexport default sidebarReducer;\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(ThunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(ThunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport {HashRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport Music from './components/Music/Music';\n\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport {connect, Provider} from 'react-redux';\nimport {compose} from 'redux';\nimport {initializeApp} from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n\n    catchAllUnhandledErrors = (promiseRejectionEvent)=> {\n        alert('Some errors')\n        console.log(promiseRejectionEvent)\n    }\n\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper__content\">\n                    <Switch>\n                        <Redirect exact from=\"/\" to=\"/profile\"/>\n                        <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                        <Route path=\"/news\" render={() => <News/>}/>\n                        <Route path=\"/login\" render={() => <Login/>}/>\n                        <Route path=\"/music\" render={() => <Music/>}/>\n                        <Route path=\"/settings\" render={() => <Settings/>}/>\n                        <Route path=\"*\" render={() => <div>404</div>}/>\n                    </Switch>\n                </div>\n            </div>\n        )\n            ;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n});\n\nlet AppContainer = compose(\n    connect(mapStateToProps, {initializeApp,}), withRouter)(App);\n\nconst MainSNApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\nexport default MainSNApp","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n};\r\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainSNApp from \"./App\";\n\nReactDOM.render(<MainSNApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const FormType = (Element) => ({input, meta: {touched, error}, type, ...props}) => {\r\n\r\n    const hasError = touched && error;\r\n\r\n    let chooseInputFormat = (type) => {\r\n        return <Element {...input} {...props} type={type}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {chooseInputFormat(type)}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__eVlZ0\",\"error\":\"FormsControls_error__1cRJs\",\"formSummaryError\":\"FormsControls_formSummaryError__3XQQn\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/User.a4c1f699.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__3KXEK\",\"selectedPage\":\"Paginator_selectedPage___Nuxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1sCw_\",\"post\":\"MyPosts_post__1TzJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ReLy\",\"loginBlock\":\"Header_loginBlock__3S3Bv\"};"],"sourceRoot":""}