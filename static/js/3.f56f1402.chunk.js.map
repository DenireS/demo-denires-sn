{"version":3,"sources":["components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","Input","FormType","Textarea","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","isFetching","className","s","profileDataForm","onSubmit","styles","formSummaryError","disabled","createField","type","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","activeClass","setActiveClass","profileData","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsMenu","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","profileEditStatus","setProfileEditStatus","editIsFetching","description","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formDate","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","newPostBody","Field","component","name","placeholder","validate","required","MyPosts","postsElements","posts","reverse","p","id","values","addPost","post","MyPostsContainer","connect","state","profilePage","dispatch","newPostText","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.f56f1402.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1bfJH\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3GBzV\",\"contact\":\"ProfileInfo_contact__1CwjK\",\"profileDataForm\":\"ProfileInfo_profileDataForm__xi4V0\",\"show\":\"ProfileInfo_show__3sf3z\",\"profileData\":\"ProfileInfo_profileData__1xQSF\",\"show2\":\"ProfileInfo_show2__Rq9bM\",\"contactsMenu\":\"ProfileInfo_contactsMenu__WsN2e\",\"passive\":\"ProfileInfo_passive__29738\",\"active\":\"ProfileInfo_active__bD8yG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1sCw_\",\"post\":\"MyPosts_post__1TzJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__f61bo\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport profileReducer from '../../../../redux/profile-reducer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n         <b>Status</b>: <span onDoubleClick={activateEditMode}>\r\n            {props.status || '-----'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport styles from \"../../../../hoc/FormsControls.module.css\";\r\nimport {createField} from \"../../../common/FormsControls/CreateField\";\r\nimport {FormType} from \"../../../../hoc/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst Input = FormType('input');\r\nconst Textarea = FormType('textarea');\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error, isFetching}) => {\r\n    return (\r\n        <form className={s.profileDataForm} onSubmit={handleSubmit}>\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            <div>\r\n                {isFetching ? <button disabled>save</button>\r\n                    : <button>save</button>\r\n                }\r\n            </div>\r\n            <div>\r\n                <b>Full name</b>: {createField('Full name', 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:\r\n                {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField('About me', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, 'contacts.' + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'edit-profile',\r\n})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../../assets/images/User.jpg';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nfunction ProfileInfo({\r\n                         profile, status, updateStatus, isOwner, savePhoto, saveProfile,\r\n                         profileEditStatus, setProfileEditStatus, editIsFetching, isFetching,\r\n                     }) {\r\n\r\n\r\n    const onSubmit = (formDate) => {\r\n        editIsFetching(true)\r\n        saveProfile(formDate);\r\n    };\r\n    const goToEditMode = () => {\r\n        setProfileEditStatus(true);\r\n    };\r\n    if (!profile) {\r\n        return <Preloader/>;\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n                {profileEditStatus\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}\r\n                                       isFetching={isFetching}/>\r\n                    :\r\n                    <ProfileData profile={profile} isOwner={isOwner}\r\n                                 goToEditMode={goToEditMode}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    let [activeClass, setActiveClass] = useState('active');\r\n\r\n    return (\r\n        <div className={s.profileData}>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div className={s[activeClass]}>\r\n                <div className={s.contactsMenu} onClick={() => setActiveClass('passive')}></div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key =>\r\n                <Contact contactTitle={key} key={key} contactValue={profile.contacts[key]}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from '../../../utils/validators/validators';\r\nimport { FormType } from '../../../hoc/FormsControls';\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => (\r\n      <Post message={p.message} key={p.id} likesCount={p.likesCount} />\r\n    ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n  return (\r\n    <div className={s.posts}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.post}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Textarea = FormType('textarea');\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.newPostBody}>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostBody\"\r\n          placeholder=\"Post\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n  form: 'addPostForm',\r\n})(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostCreator } from './../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo {...props}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport * as axios from 'axios';\r\nimport {\r\n    setUserProfile,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus, savePhoto, saveProfile, setProfileEditStatus, editIsFetching,\r\n} from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile isOwner={!this.props.match.params.userId} {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    profileEditStatus: state.profilePage.profileEditStatus,\r\n    isFetching: state.profilePage.isFetching,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n        setProfileEditStatus,\r\n        editIsFetching,\r\n    }),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}