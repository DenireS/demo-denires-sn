{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/Users/users.module.css","components/common/Preloader/Preloader.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/common/Preloader/Preloader.jsx","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/profile-reducer.js","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/common/FormsControls/CreateField.js","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","hoc/withSuspense.js","index.js","hoc/FormsControls.js","hoc/FormsControls.module.css","utils/validators/validators.js","assets/images/User.jpg","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["instanse","axios","withCredentials","baseURL","headers","UsersAPI","getUsers","currentPage","pageSise","get","follow","userId","post","unfollow","delete","getProfile","console","warn","ProfileAPI","getStatus","updateStatus","status","put","savePhoto","photoFIle","formData","FormData","append","saveProfile","profile","AuthAPI","me","login","email","password","rememberMe","captcha","logout","SecurityAPI","DialogsAPI","getDialogs","getChatting","id","getMessages","sendMessage","body","initialState","currentChat","isFetching","users","photo","userName","messages","dialogsIsFetching","type","setCurrentChat","dispatch","a","requestMessages","startChatting","response","items","data","requestDialogs","map","m","photos","small","payload","dialogsReducer","state","action","newMessageBody","message","reverse","module","exports","Preloader","props","className","styles","ldsDualRing","Boolean","window","location","hostname","match","Navbar","s","nav","item","to","activeClassName","activeLink","News","Settings","Music","updateObjectinArray","itemId","objPropName","newObjProps","u","pageSize","portionSize","totalItemsCount","followingInProgress","followSucces","unfollowSucces","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","resultCode","usersReducer","followed","filter","Paginator","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","classNames","selectedPage","key","e","User","user","src","userPhoto","disabled","some","name","Users","usersPage","getPageSize","getPortionSize","getTotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","React","Component","compose","connect","page","totalCount","posts","likesCount","profileEditStatus","setUserProfile","setStatus","setProfileEditStatus","editIsFetching","getUserProfile","profileReducer","newPost","newPostText","postId","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","value","onBlur","autoFocus","createField","placeholder","validators","component","text","Field","validate","Input","FormType","Textarea","ProfileDataReduxForm","reduxForm","form","handleSubmit","error","profileDataForm","onSubmit","formSummaryError","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","activeClass","setActiveClass","profileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsMenu","contactTitle","contactValue","Contact","ProfileInfo","description","large","mainPhoto","target","files","length","initialValues","formDate","Post","maxLength10","maxLengthCreator","AddPostFormRedux","newPostBody","required","MyPosts","postsElements","values","addPost","MyPostsContainer","profilePage","addPostCreator","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","snapshot","auth","isAuth","alert","file","getState","stopSubmit","_error","withRouter","Header","header","loginBlock","Logout","captchaURL","setAuthUserData","setCaptchaURL","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","Login","url","initialized","appReducer","sidebarReducer","reducers","combineReducers","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","ThunkMiddleware","__store__","DialogsContainer","lazy","App","catchAllUnhandledErrors","promiseRejectionEvent","log","initializeApp","addEventListener","removeEventListener","exact","from","path","render","Suspense","fallback","AppContainer","promise","Promise","all","then","MainSNApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","Element","input","meta","touched","hasError","formControl","chooseInputFormat","maxLength"],"mappings":"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","file":"static/js/main.691a3065.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '51707569-2172-436d-84e1-481fec77399c',\r\n    },\r\n});\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 1, pageSise = 10) {\r\n        return instanse\r\n            .get(`users?page=${currentPage}&count=${pageSise}`);\r\n    },\r\n    follow(userId) {\r\n        return instanse.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instanse\r\n            .delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Old API method must be changed');\r\n        return ProfileAPI.getProfile(userId);\r\n    },\r\n};\r\nexport const ProfileAPI = {\r\n    getProfile(userId) {\r\n        return instanse.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instanse.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instanse.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFIle) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFIle)\r\n        return instanse.put(`profile/photo`, formData)\r\n    },\r\n    saveProfile(profile) {\r\n        return instanse.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const AuthAPI = {\r\n    me() {\r\n        return instanse.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instanse.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instanse.delete(`auth/login`);\r\n    },\r\n};\r\n\r\nexport const SecurityAPI = {\r\n    captcha() {\r\n        return instanse.get(`security/get-captcha-url`)\r\n    }\r\n}\r\nexport const DialogsAPI = {\r\n    getDialogs() {\r\n        return instanse.get(`dialogs`)\r\n    },\r\n    getChatting(id) {\r\n        return instanse.put('dialogs/' + id)\r\n    },\r\n    getMessages(id) {\r\n        return instanse.get(`dialogs/${id}/messages`)\r\n    },\r\n    sendMessage(id, body) {\r\n        return instanse.post(`dialogs/${id}/messages`, {body:body})\r\n    }\r\n\r\n}\r\n","import {DialogsAPI} from \"../api/api\";\r\n\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\nconst SET_DIALOG_USER_DATA = 'SET_DIALOG_USER_DATA'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst SET_DIALOG_USER_MESSAGES = 'SET_DIALOG_USER_MESSAGES'\r\nconst SET_CURRENT_CHAT = 'SET_CURRENT_CHAT'\r\n\r\nlet initialState = {\r\n    currentChat: null,\r\n    isFetching: false,\r\n    users: [\r\n        {id: null, photo: null, userName: null},\r\n    ],\r\n    messages: [],\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            };\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case SET_CURRENT_CHAT: {\r\n            return {\r\n                ...state,\r\n                currentChat: action.id\r\n            }\r\n        }\r\n        case SET_DIALOG_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                users: [action.payload]\r\n            }\r\n        }\r\n        case SET_DIALOG_USER_MESSAGES: {\r\n            return {\r\n                ...state,\r\n                messages: action.items.reverse()\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setDialogUserData = (id, photo, userName) => ({\r\n    type: SET_DIALOG_USER_DATA,\r\n    payload: {\r\n        id,\r\n        photo,\r\n        userName,\r\n    },\r\n});\r\nexport const setDialogUserMessages = (items) => ({\r\n    type: SET_DIALOG_USER_MESSAGES,\r\n    items\r\n});\r\n\r\nexport const dialogsIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n});\r\nexport const setCurrentChat = (id) => ({\r\n    type: SET_CURRENT_CHAT,\r\n    id,\r\n});\r\n\r\nexport const sendMessage = (id, body) =>\r\n    async (dispatch) => {\r\n        let response = await DialogsAPI.sendMessage(id, body)\r\n        dispatch(requestMessages(id))\r\n    }\r\n\r\n\r\nexport const startChatting = (id) =>\r\n    async (dispatch) => {\r\n        let response = await DialogsAPI.getChatting(id)\r\n    }\r\n\r\nexport const requestMessages = (id) =>\r\n    async (dispatch) => {\r\n        let response = await DialogsAPI.getMessages(id)\r\n        dispatch(setDialogUserMessages(response.data.items))\r\n    }\r\n\r\nexport const requestDialogs = () =>\r\n    async (dispatch) => {\r\n        dispatch(dialogsIsFetching(true))\r\n        let respone = await DialogsAPI.getDialogs();\r\n        respone.data.map(m => {\r\n            dispatch(setDialogUserData(m.id, m.photos.small, m.userName,))\r\n        })\r\n        dispatch(dialogsIsFetching(false))\r\n\r\n    }\r\n\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3nFrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__1DtRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__f61bo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1gc_1\",\"item\":\"Navbar_item__2crGM\",\"activeLink\":\"Navbar_activeLink__1RMXt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1bfJH\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3GBzV\",\"contact\":\"ProfileInfo_contact__1CwjK\",\"profileDataForm\":\"ProfileInfo_profileDataForm__xi4V0\",\"show\":\"ProfileInfo_show__3sf3z\",\"profileData\":\"ProfileInfo_profileData__1xQSF\",\"show2\":\"ProfileInfo_show2__Rq9bM\",\"contactsMenu\":\"ProfileInfo_contactsMenu__WsN2e\",\"passive\":\"ProfileInfo_passive__29738\",\"active\":\"ProfileInfo_active__bD8yG\"};","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\nfunction Preloader(props) {\r\n  return <div className={styles.ldsDualRing}></div>;\r\n}\r\n\r\nexport default Preloader;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.activeLink}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/login\" activeClassName={s.activeLink}>\r\n          Login\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nfunction News(props) {\r\n  return <div>News</div>;\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nfunction Settings(props) {\r\n  return <div>Settings</div>;\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nfunction Music(props) {\r\n  return <div>Music</div>;\r\n}\r\n\r\nexport default Music;\r\n","export const updateObjectinArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map((u) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {UsersAPI} from '../api/api';\r\nimport {updateObjectinArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    portionSize: 10,\r\n    totalItemsCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectinArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectinArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalItemsCount: action.totalItemsCount};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id) => id != action.userId),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSucces = (userId) => ({\r\n    type: FOLLOW,\r\n    userId,\r\n});\r\n\r\nexport const unfollowSucces = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId,\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users,\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalItemsCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalItemsCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) =>\r\n    async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let response = await UsersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount));\r\n\r\n    };\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod;\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, UsersAPI.follow(userId), followSucces)\r\n    };\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, UsersAPI.unfollow(userId), unfollowSucces);\r\n    }\r\n};\r\n\r\nexport default usersReducer;\r\n","import React, {useEffect, useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport classNames from 'classnames'\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Prev page</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => (\r\n                    <span\r\n                        className={classNames(styles.pages, {[styles.selectedPage]: currentPage === p})}\r\n                        key={p}\r\n                        onClick={(e) => {\r\n                            onPageChanged(p);\r\n                        }}>{p}</span>\r\n                ))\r\n            }\r\n\r\n            {portionNumber < portionCount &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>Next page</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;\r\n\r\n//className={styles.pages && (currentPage === p ? styles.selectedPage : styles.notSelectedPage)}","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/User.jpg';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n          <span>\r\n            <div>\r\n              <NavLink to={'/profile/' + user.id}>\r\n                <img\r\n                    src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                    className={styles.userPhoto}\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {user.followed ? (\r\n                  <button\r\n                      disabled={followingInProgress.some((id) => id === user.id)}\r\n                      onClick={() => {\r\n                          unfollow(user.id);\r\n                      }}\r\n                  >\r\n                      Unfollow\r\n                  </button>\r\n              ) : (\r\n                  <button\r\n                      disabled={followingInProgress.some((id) => id === user.id)}\r\n                      onClick={() => {\r\n                          follow(user.id);\r\n                      }}\r\n                  >\r\n                      Follow\r\n                  </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n            <span>\r\n            <span>\r\n              <div>{user.name}</div>\r\n              <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{'user.location.country'}</div>\r\n              <div>{'user.location.city'}</div>\r\n            </span>\r\n          </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, onPageChanged, totalItemsCount, pageSize, users, portionSize, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalItemsCount} pageSize={pageSize} portionSize={portionSize}/>\r\n            <div>\r\n                {users.map((u) => <User user={u} key={u.id} followingInProgress={props.followingInProgress}\r\n                                        unfollow={props.unfollow} follow={props.follow}/>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getPortionSize = (state) => {\r\n  return state.usersPage.portionSize;\r\n};\r\nexport const getTotalItemsCount = (state) => {\r\n  return state.usersPage.totalItemsCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getPageSize,\r\n    getUsers,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress, getPortionSize, getTotalItemsCount,\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let pageSize = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalItemsCount={this.props.totalItemsCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    portionSize={this.props.portionSize}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateTopProps = (state) => {\r\n    return {\r\n        portionSize: getPortionSize(state),\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalItemsCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateTopProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers,\r\n    })\r\n)(UsersContainer);\r\n","import {UsersAPI, ProfileAPI} from '../api/api';\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst PROFILE_EDIT_STATUS = 'PROFILE_EDIT_STATUS';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 11},\r\n        {id: 2, message: 'It`s my first post', likesCount: 23},\r\n    ],\r\n    profile: null,\r\n    profileEditStatus: false,\r\n    isFetching: false,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((p) => p.id !== action.postId),\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos},\r\n            };\r\n        }\r\n        case PROFILE_EDIT_STATUS: {\r\n            return {\r\n                ...state,\r\n                profileEditStatus: action.status,\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state,\r\n                isFetching: action.isFetching};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText,\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status,\r\n});\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId,\r\n});\r\nexport const savePhotoSuccess = (photos) => ({\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photos,\r\n});\r\nexport const setProfileEditStatus = (status) => ({\r\n    type: PROFILE_EDIT_STATUS,\r\n    status,\r\n});\r\nexport const editIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await UsersAPI.getProfile(userId)\r\n\r\n    dispatch(setUserProfile(response.data));\r\n\r\n};\r\n\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await ProfileAPI.getStatus(userId)\r\n\r\n    dispatch(setStatus(response.data));\r\n\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await ProfileAPI.updateStatus(status)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        alert(error)\r\n    }\r\n\r\n\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await ProfileAPI.savePhoto(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await ProfileAPI.saveProfile(profile)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setProfileEditStatus(false))\r\n        dispatch(editIsFetching(false))\r\n        dispatch(getUserProfile(userId));\r\n    } else if (response.data.resultCode === 1) {\r\n        dispatch(editIsFetching(false))\r\n        //dispatch(setProfileEditStatus(true))\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport profileReducer from '../../../../redux/profile-reducer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n         <b>Status</b>: <span onDoubleClick={activateEditMode}>\r\n            {props.status || '-----'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport styles from './CreateField.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props, text = '') =>\r\n    (<div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            validate={validators}\r\n            {...props}\r\n        /> {text}\r\n    </div>)\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport styles from \"../../../../hoc/FormsControls.module.css\";\r\nimport {createField} from \"../../../common/FormsControls/CreateField\";\r\nimport {FormType} from \"../../../../hoc/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst Input = FormType('input');\r\nconst Textarea = FormType('textarea');\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error, isFetching}) => {\r\n    return (\r\n        <form className={s.profileDataForm} onSubmit={handleSubmit}>\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            <div>\r\n                {isFetching ? <button disabled>save</button>\r\n                    : <button>save</button>\r\n                }\r\n            </div>\r\n            <div>\r\n                <b>Full name</b>: {createField('Full name', 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:\r\n                {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField('About me', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, 'contacts.' + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'edit-profile',\r\n})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../../assets/images/User.jpg';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nfunction ProfileInfo({\r\n                         profile, status, updateStatus, isOwner, savePhoto, saveProfile,\r\n                         profileEditStatus, setProfileEditStatus, editIsFetching, isFetching,\r\n                     }) {\r\n\r\n\r\n    const onSubmit = (formDate) => {\r\n        editIsFetching(true)\r\n        saveProfile(formDate);\r\n    };\r\n    const goToEditMode = () => {\r\n        setProfileEditStatus(true);\r\n    };\r\n    if (!profile) {\r\n        return <Preloader/>;\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n                {profileEditStatus\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}\r\n                                       isFetching={isFetching}/>\r\n                    :\r\n                    <ProfileData profile={profile} isOwner={isOwner}\r\n                                 goToEditMode={goToEditMode}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    let [activeClass, setActiveClass] = useState('active');\r\n\r\n    return (\r\n        <div className={s.profileData}>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div className={s[activeClass]}>\r\n                <div className={s.contactsMenu} onClick={() => setActiveClass('passive')}></div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key =>\r\n                <Contact contactTitle={key} key={key} contactValue={profile.contacts[key]}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.pinimg.com/736x/14/79/9d/14799d9779f9b44d7116783ce7121d5f.jpg\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from '../../../utils/validators/validators';\r\nimport { FormType } from '../../../hoc/FormsControls';\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => (\r\n      <Post message={p.message} key={p.id} likesCount={p.likesCount} />\r\n    ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n  return (\r\n    <div className={s.posts}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.post}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Textarea = FormType('textarea');\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.newPostBody}>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostBody\"\r\n          placeholder=\"Post\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n  form: 'addPostForm',\r\n})(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostCreator } from './../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo {...props}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport * as axios from 'axios';\r\nimport {\r\n    setUserProfile,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus, savePhoto, saveProfile, setProfileEditStatus, editIsFetching,\r\n} from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile isOwner={!this.props.match.params.userId} {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    profileEditStatus: state.profilePage.profileEditStatus,\r\n    isFetching: state.profilePage.isFetching,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n        setProfileEditStatus,\r\n        editIsFetching,\r\n    }),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\"></img>\r\n      <div className={s.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.Logout}>Logout</button>{' '}\r\n          </div>\r\n        ) : (\r\n          <NavLink to={'/login'}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {AuthAPI, SecurityAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_URL = 'auth/SET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null,\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth,\r\n    },\r\n});\r\nexport const setCaptchaURL = (captchaURL) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        captchaURL\r\n    },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await AuthAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n};\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let response = await SecurityAPI.captcha();\r\n    let captchaURL = response.data.url;\r\n    dispatch(setCaptchaURL(captchaURL))\r\n\r\n};\r\n\r\nexport const Login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\nexport const Logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await AuthAPI.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { Logout })(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport styles from '../../hoc/FormsControls.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {FormType} from '../../hoc/FormsControls';\r\nimport {connect} from 'react-redux';\r\nimport {Logout, Login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {createField} from \"../common/FormsControls/CreateField\";\r\n\r\nconst Input = FormType('input');\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaURL}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'Remember Me')}\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            {captchaURL && <img src={captchaURL}/>}\r\n            {captchaURL && createField('Write correct symbols', 'captcha', [required], Input) }\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm);\r\n\r\nconst LoginAuth = (props) => {\r\n    const onSubmit = (formDate) => {\r\n        props.Login(formDate.email, formDate.password, formDate.rememberMe, formDate.captcha);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaURL: state.auth.captchaURL,\r\n});\r\n\r\nexport default connect(mapStateToProps, {Logout, Login})(LoginAuth);\r\n","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCES = 'INITIALIZED_SUCCES';\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCES:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSucces = () => ({\r\n  type: INITIALIZED_SUCCES,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSucces());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","let initialState = {};\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\nexport default sidebarReducer;\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(ThunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(ThunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport Music from './components/Music/Music';\r\n\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport {connect, Provider} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n        alert('Some errors')\r\n        console.log(promiseRejectionEvent)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>;\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className=\"app-wrapper__content\">\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"/profile\"/>\r\n                        <Route path=\"/dialogs/:userId?\" render={withSuspense(DialogsContainer)}/>\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                        <Route path=\"/news\" render={() => <News/>}/>\r\n                        <Route path=\"/login\" render={() => <Login/>}/>\r\n                        <Route path=\"/music\" render={() => <Music/>}/>\r\n                        <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                        <Route path=\"*\" render={() => <div>404</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n});\r\n\r\nlet AppContainer = compose(\r\n    connect(mapStateToProps, {initializeApp,}), withRouter)(App);\r\n\r\nconst MainSNApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\nexport default MainSNApp","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n};\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainSNApp from \"./App\";\r\n\r\nReactDOM.render(<MainSNApp/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const FormType = (Element) => ({input, meta: {touched, error}, type, ...props}) => {\r\n\r\n    const hasError = touched && error;\r\n\r\n    let chooseInputFormat = (type) => {\r\n        return <Element {...input} {...props} type={type}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {chooseInputFormat(type)}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__eVlZ0\",\"error\":\"FormsControls_error__1cRJs\",\"formSummaryError\":\"FormsControls_formSummaryError__3XQQn\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/User.a4c1f699.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__3KXEK\",\"selectedPage\":\"Paginator_selectedPage___Nuxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1sCw_\",\"post\":\"MyPosts_post__1TzJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ReLy\",\"loginBlock\":\"Header_loginBlock__3S3Bv\"};"],"sourceRoot":""}